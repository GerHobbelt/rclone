{
    "openapi": "3.0.3",
    "info": {
        "title": "Vault API",
        "version": "0.6.0",
        "description": "Vault Digital Preservation System Private API"
    },
    "paths": {
        "/api/collections/": {
            "get": {
                "operationId": "collections_list",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "query",
                        "name": "fixity_frequency",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MONTHLY",
                                "QUARTERLY",
                                "TWICE_YEARLY"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "fixity_frequency__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fixity_frequency__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fixity_frequency__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fixity_frequency__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fixity_frequency__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fixity_frequency__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "id__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "organization__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "target_replication",
                        "schema": {
                            "type": "integer",
                            "enum": [
                                2,
                                3,
                                4
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "target_replication__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "target_replication__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "target_replication__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "target_replication__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "target_replication__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tree_node",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "collections_create",
                "description": "Custom create method for saving plan-related info.",
                "tags": [
                    "vault"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Collection"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/collections/{id}/": {
            "get": {
                "operationId": "collections_retrieve",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this collection.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Collection"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "collections_update",
                "description": "Check self.mutatble_fields against the request data object's keys and respond\nwith a 403 if any immutable field was specified.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this collection.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Collection"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "collections_partial_update",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this collection.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollectionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollectionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollectionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Collection"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/deposits/": {
            "get": {
                "operationId": "deposits_list",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "query",
                        "name": "collection",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "collection__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "hashed_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "hashed_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "hashed_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "hashed_at__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "hashed_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "hashed_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "id__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "organization__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "parent_node",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_node__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "registered_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "registered_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "registered_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "registered_at__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "registered_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "registered_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "replicated_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "replicated_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "replicated_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "replicated_at__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "replicated_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "replicated_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "COMPLETE_WITH_ERRORS",
                                "HASHED",
                                "REGISTERED",
                                "REPLICATED",
                                "UPLOADED"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "state__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "state__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "state__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "uploaded_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "uploaded_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "uploaded_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "uploaded_at__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "uploaded_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "uploaded_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDepositList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/deposits/{id}/": {
            "get": {
                "operationId": "deposits_retrieve",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this deposit.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Deposit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/events/": {
            "get": {
                "operationId": "events_list",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "query",
                        "name": "collection",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "collection__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "collection_tree_node",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter by collection-related tree_node"
                    },
                    {
                        "in": "query",
                        "name": "ended_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ended_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ended_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ended_at__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "ended_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ended_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "error_count",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "error_count__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "error_count__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "error_count__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "error_count__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "error_count__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_count",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_count__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_count__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_count__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "file_count__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_count__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "id__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "started_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "started_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "started_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "started_at__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "started_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "started_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DEPOSIT",
                                "FIXITY"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "type__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "type__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "upload_state",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "COMPLETE_WITH_ERRORS",
                                "HASHED",
                                "REGISTERED",
                                "REPLICATED",
                                "UPLOADED"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "upload_state__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "upload_state__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "upload_state__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "upload_state__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "upload_state__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "upload_state__startswith",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedEventList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/events/{id}/": {
            "get": {
                "operationId": "events_retrieve",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this event.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/geolocations/": {
            "get": {
                "operationId": "geolocations_list",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGeolocationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/geolocations/{id}/": {
            "get": {
                "operationId": "geolocations_retrieve",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this geolocation.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Geolocation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/organizations/": {
            "get": {
                "operationId": "organizations_list",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "plan",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "plan__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "quota_bytes",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "quota_bytes__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "quota_bytes__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "quota_bytes__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "quota_bytes__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "quota_bytes__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tree_node",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOrganizationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/organizations/{id}/": {
            "get": {
                "operationId": "organizations_retrieve",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this organization.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Organization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/plans/": {
            "get": {
                "operationId": "plans_list",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "query",
                        "name": "default_fixity_frequency",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "MONTHLY",
                                "QUARTERLY",
                                "TWICE_YEARLY"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_fixity_frequency__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_fixity_frequency__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_fixity_frequency__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_fixity_frequency__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_fixity_frequency__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "default_fixity_frequency__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_replication",
                        "schema": {
                            "type": "integer",
                            "enum": [
                                2,
                                3,
                                4
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_replication__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_replication__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_replication__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "default_replication__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "default_replication__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "price_per_terabyte",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "price_per_terabyte__gt",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "price_per_terabyte__gte",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "price_per_terabyte__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "price_per_terabyte__lt",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "price_per_terabyte__lte",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPlanList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/plans/{id}/": {
            "get": {
                "operationId": "plans_retrieve",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this plan.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Plan"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/reports/": {
            "get": {
                "operationId": "reports_list",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "query",
                        "name": "collection",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "collection__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "collection_file_count",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "collection_file_count__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "collection_file_count__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "collection_file_count__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "collection_file_count__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "collection_file_count__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "collection_total_size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "collection_total_size__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "collection_total_size__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "collection_total_size__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "collection_total_size__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "collection_total_size__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "collection_tree_node",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter by collection-related tree_node"
                    },
                    {
                        "in": "query",
                        "name": "ended_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ended_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ended_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ended_at__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "ended_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ended_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "error_count",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "error_count__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "error_count__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "error_count__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "error_count__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "error_count__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_count",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_count__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_count__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_count__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "file_count__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_count__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "id__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "report_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "DEPOSIT",
                                "FIXITY"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "report_type__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "report_type__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "report_type__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "report_type__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "report_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "report_type__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "started_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "started_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "started_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "started_at__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "started_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "started_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "total_size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "total_size__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "total_size__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "total_size__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "total_size__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "total_size__lte",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedReportList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/reports/{id}/": {
            "get": {
                "operationId": "reports_retrieve",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this report.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Report"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/treenodes/": {
            "get": {
                "operationId": "treenodes_list",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "query",
                        "name": "comment",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "comment__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "comment__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "comment__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "comment__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "comment__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "comment__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_type__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_type__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_type__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_type__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "file_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "file_type__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "id__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "md5_sum",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "md5_sum__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "md5_sum__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "md5_sum__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "md5_sum__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "md5_sum__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "md5_sum__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "modified_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "COLLECTION",
                                "FILE",
                                "FOLDER",
                                "ORGANIZATION"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "node_type__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node_type__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node_type__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node_type__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "node_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "node_type__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "path__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "path__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "path__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "path__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "path__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pre_deposit_modified_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pre_deposit_modified_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pre_deposit_modified_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pre_deposit_modified_at__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pre_deposit_modified_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pre_deposit_modified_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sha1_sum",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sha1_sum__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sha1_sum__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sha1_sum__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sha1_sum__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sha1_sum__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "sha1_sum__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sha256_sum",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sha256_sum__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sha256_sum__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sha256_sum__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sha256_sum__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sha256_sum__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "sha256_sum__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "size__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "size__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "size__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "size__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "size__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "uploaded_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "uploaded_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "uploaded_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "uploaded_at__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "uploaded_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "uploaded_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "uploaded_by",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "uploaded_by__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTreeNodeList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "treenodes_create",
                "description": "Override CreateModelMixin.create() to validate requests.",
                "tags": [
                    "vault"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TreeNodeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TreeNodeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TreeNodeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TreeNode"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/treenodes/{id}/": {
            "get": {
                "operationId": "treenodes_retrieve",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tree node.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TreeNode"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "treenodes_update",
                "description": "Override UpdateModelMixin.update() to validate that any specified parent is\naccessible by the requesting user.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tree node.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TreeNodeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TreeNodeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TreeNodeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TreeNode"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "treenodes_partial_update",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tree node.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTreeNodeRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTreeNodeRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTreeNodeRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TreeNode"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "treenodes_destroy",
                "description": "Soft DELETE of Treenode.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this tree node.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/users/": {
            "get": {
                "operationId": "users_list",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "query",
                        "name": "date_joined",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "date_joined__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "date_joined__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "date_joined__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "date_joined__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "date_joined__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "email__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "email__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_name__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_name__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "first_name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__gt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__gte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "id__lt",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "id__lte",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_login",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_login__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_login__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_login__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "last_login__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_login__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_name__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_name__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_name__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "last_name__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "organization__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ADMIN",
                                "USER",
                                "VIEWER"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "role__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "username",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "username__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "username__endswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "username__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "username__iexact",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "username__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "username__startswith",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "users_create",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "tags": [
                    "vault"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/{id}/": {
            "get": {
                "operationId": "users_retrieve",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "users_update",
                "description": "Check self.mutatble_fields against the request data object's keys and respond\nwith a 403 if any immutable field was specified.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "users_partial_update",
                "description": "GenericViewSet subclass w/ List + Retrieve mixins that implements:\n\n- Additional GET param support\n\n  - *__exact/gt/gte/lt/lte lookups for numeric fields\n\n  - *__exact/contains/endswith/... lookups for text fields\n    See FILTERSET_TEXT_SPEC for the full list.\n\n  - __depth=N for specifying foreign key lookup depth",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user.",
                        "required": true
                    }
                ],
                "tags": [
                    "vault"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Collection": {
                "type": "object",
                "properties": {
                    "fixity_frequency": {
                        "$ref": "#/components/schemas/FixityFrequencyEnum"
                    },
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "organization": {
                        "type": "string",
                        "format": "uri"
                    },
                    "target_geolocations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Geolocation"
                        },
                        "readOnly": true
                    },
                    "target_replication": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TargetReplicationEnum"
                            }
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "tree_node": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "name",
                    "organization",
                    "target_geolocations",
                    "url"
                ]
            },
            "CollectionRequest": {
                "type": "object",
                "properties": {
                    "fixity_frequency": {
                        "$ref": "#/components/schemas/FixityFrequencyEnum"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "organization": {
                        "type": "string",
                        "format": "uri"
                    },
                    "target_replication": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TargetReplicationEnum"
                            }
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "tree_node": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    }
                },
                "required": [
                    "name",
                    "organization"
                ]
            },
            "DefaultFixityFrequencyEnum": {
                "enum": [
                    "TWICE_YEARLY",
                    "QUARTERLY",
                    "MONTHLY"
                ],
                "type": "string"
            },
            "DefaultReplicationEnum": {
                "enum": [
                    2,
                    3,
                    4
                ],
                "type": "integer"
            },
            "Deposit": {
                "type": "object",
                "properties": {
                    "collection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MinimalCollection"
                            }
                        ],
                        "readOnly": true
                    },
                    "hashed_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "string",
                        "format": "uri"
                    },
                    "parent_node": {
                        "type": "string",
                        "format": "uri"
                    },
                    "registered_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "replicated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "state": {
                        "$ref": "#/components/schemas/StateEnum"
                    },
                    "uploaded_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MinimalUser"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "collection",
                    "id",
                    "organization",
                    "parent_node",
                    "registered_at",
                    "user"
                ]
            },
            "Event": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeEnum"
                    },
                    "collection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MinimalCollection"
                            }
                        ],
                        "readOnly": true
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "upload_state": {
                        "$ref": "#/components/schemas/UploadStateEnum"
                    },
                    "ended_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "file_count": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64",
                        "nullable": true
                    },
                    "error_count": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "collection",
                    "id",
                    "upload_state",
                    "url"
                ]
            },
            "FixityFrequencyEnum": {
                "enum": [
                    "TWICE_YEARLY",
                    "QUARTERLY",
                    "MONTHLY"
                ],
                "type": "string"
            },
            "Geolocation": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "GeolocationRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    }
                },
                "required": [
                    "name"
                ]
            },
            "MinimalCollection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "id",
                    "name",
                    "url"
                ]
            },
            "MinimalUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    }
                },
                "required": [
                    "id",
                    "url",
                    "username"
                ]
            },
            "MinimalUserRequest": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    }
                },
                "required": [
                    "username"
                ]
            },
            "NodeTypeEnum": {
                "enum": [
                    "FILE",
                    "FOLDER",
                    "COLLECTION",
                    "ORGANIZATION"
                ],
                "type": "string"
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "plan": {
                        "type": "string",
                        "format": "uri"
                    },
                    "quota_bytes": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "tree_node": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "name",
                    "plan",
                    "url"
                ]
            },
            "PaginatedCollectionList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Collection"
                        }
                    }
                }
            },
            "PaginatedDepositList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Deposit"
                        }
                    }
                }
            },
            "PaginatedEventList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event"
                        }
                    }
                }
            },
            "PaginatedGeolocationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Geolocation"
                        }
                    }
                }
            },
            "PaginatedOrganizationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Organization"
                        }
                    }
                }
            },
            "PaginatedPlanList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Plan"
                        }
                    }
                }
            },
            "PaginatedReportList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Report"
                        }
                    }
                }
            },
            "PaginatedTreeNodeList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TreeNode"
                        }
                    }
                }
            },
            "PaginatedUserList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                }
            },
            "PatchedCollectionRequest": {
                "type": "object",
                "properties": {
                    "fixity_frequency": {
                        "$ref": "#/components/schemas/FixityFrequencyEnum"
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                    },
                    "organization": {
                        "type": "string",
                        "format": "uri"
                    },
                    "target_replication": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TargetReplicationEnum"
                            }
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "tree_node": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    }
                }
            },
            "PatchedTreeNodeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "node_type": {
                        "$ref": "#/components/schemas/NodeTypeEnum"
                    },
                    "file_type": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "size": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64",
                        "nullable": true
                    },
                    "uploaded_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "pre_deposit_modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "md5_sum": {
                        "type": "string",
                        "nullable": true,
                        "pattern": "^[a-zA-Z0-9]{32}$",
                        "maxLength": 32
                    },
                    "sha1_sum": {
                        "type": "string",
                        "nullable": true,
                        "pattern": "^[a-zA-Z0-9]{40}$",
                        "maxLength": 40
                    },
                    "sha256_sum": {
                        "type": "string",
                        "nullable": true,
                        "pattern": "^[a-zA-Z0-9]{64}$",
                        "maxLength": 64
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    }
                }
            },
            "PatchedUserRequest": {
                "type": "object",
                "properties": {
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active",
                        "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff status",
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "organization": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    }
                }
            },
            "Plan": {
                "type": "object",
                "properties": {
                    "default_fixity_frequency": {
                        "$ref": "#/components/schemas/DefaultFixityFrequencyEnum"
                    },
                    "default_geolocations": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "default_replication": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DefaultReplicationEnum"
                            }
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "price_per_terabyte": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$"
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "default_geolocations",
                    "name",
                    "price_per_terabyte",
                    "url"
                ]
            },
            "Report": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "collection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MinimalCollection"
                            }
                        ],
                        "readOnly": true
                    },
                    "collection_total_size": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "collection_file_count": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ended_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "report_type": {
                        "$ref": "#/components/schemas/ReportTypeEnum"
                    },
                    "total_size": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "file_count": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "error_count": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "title": {
                        "type": "string"
                    },
                    "collection_tree_node": {
                        "type": "integer"
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "collection",
                    "collection_file_count",
                    "collection_total_size",
                    "collection_tree_node",
                    "ended_at",
                    "error_count",
                    "file_count",
                    "id",
                    "started_at",
                    "title",
                    "total_size",
                    "url"
                ]
            },
            "ReportTypeEnum": {
                "enum": [
                    "FIXITY",
                    "DEPOSIT"
                ],
                "type": "string"
            },
            "RoleEnum": {
                "enum": [
                    "ADMIN",
                    "USER",
                    "VIEWER"
                ],
                "type": "string"
            },
            "StateEnum": {
                "enum": [
                    "REGISTERED",
                    "UPLOADED",
                    "HASHED",
                    "REPLICATED",
                    "COMPLETE_WITH_ERRORS"
                ],
                "type": "string"
            },
            "TargetReplicationEnum": {
                "enum": [
                    2,
                    3,
                    4
                ],
                "type": "integer"
            },
            "TreeNode": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "node_type": {
                        "$ref": "#/components/schemas/NodeTypeEnum"
                    },
                    "file_type": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "size": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64",
                        "nullable": true
                    },
                    "uploaded_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "pre_deposit_modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "uploaded_by": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MinimalUser"
                            }
                        ],
                        "readOnly": true
                    },
                    "md5_sum": {
                        "type": "string",
                        "nullable": true,
                        "pattern": "^[a-zA-Z0-9]{32}$",
                        "maxLength": 32
                    },
                    "sha1_sum": {
                        "type": "string",
                        "nullable": true,
                        "pattern": "^[a-zA-Z0-9]{40}$",
                        "maxLength": 40
                    },
                    "sha256_sum": {
                        "type": "string",
                        "nullable": true,
                        "pattern": "^[a-zA-Z0-9]{64}$",
                        "maxLength": 64
                    },
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "path": {
                        "type": "string",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "content_url": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "required": [
                    "content_url",
                    "id",
                    "modified_at",
                    "name",
                    "path",
                    "uploaded_by",
                    "url"
                ]
            },
            "TreeNodeRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "node_type": {
                        "$ref": "#/components/schemas/NodeTypeEnum"
                    },
                    "file_type": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "size": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64",
                        "nullable": true
                    },
                    "uploaded_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "pre_deposit_modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "md5_sum": {
                        "type": "string",
                        "nullable": true,
                        "pattern": "^[a-zA-Z0-9]{32}$",
                        "maxLength": 32
                    },
                    "sha1_sum": {
                        "type": "string",
                        "nullable": true,
                        "pattern": "^[a-zA-Z0-9]{40}$",
                        "maxLength": 40
                    },
                    "sha256_sum": {
                        "type": "string",
                        "nullable": true,
                        "pattern": "^[a-zA-Z0-9]{64}$",
                        "maxLength": 64
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "TypeEnum": {
                "enum": [
                    "DEPOSIT",
                    "FIXITY"
                ],
                "type": "string"
            },
            "UploadStateEnum": {
                "enum": [
                    "REGISTERED",
                    "UPLOADED",
                    "HASHED",
                    "REPLICATED",
                    "COMPLETE_WITH_ERRORS"
                ],
                "type": "string"
            },
            "User": {
                "type": "object",
                "properties": {
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active",
                        "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff status",
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "organization": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    }
                },
                "required": [
                    "email",
                    "id",
                    "url",
                    "username"
                ]
            },
            "UserRequest": {
                "type": "object",
                "properties": {
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 1,
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active",
                        "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff status",
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "organization": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    }
                },
                "required": [
                    "email",
                    "username"
                ]
            }
        },
        "securitySchemes": {
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "vault-session-id"
            }
        }
    }
}